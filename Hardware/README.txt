Here's the folder for all the quartus project files Elisabeth has created. 

Versions:
Control Panel: the control panel example recompiled for quartus 15.1
Karaoke_15_1_v1_1: Has a block diagram as the top file. Uses the Audio Clk and Audio IP cores, and clock_500 and i2c Verilog blocks from the i2sound example program with the audio configuration settings changed for this project's specifications. Volume controlled by software. Has a hps with an interval timer, fifo, 7 bit output pio for volume and several 1 bit flag pios, and pio for leds (for debugging). Audio in is directly connected to audio out.
Karaoke_15_1_v1_2: Has a block diagram as the top file. Uses the Audio Clk and Audio IP cores, and clock_500 and i2c Verilog blocks from the i2sound example program with the audio configuration settings changed for this project's specifications. Volume controlled by software. Has a hps with an interval timer, fifo, 7 bit output pio for volume and several 1 bit flag pios, and pio for leds (for debugging). Plays instrumental track.
Karaoke_15_1_v1_3: Displays Linux on LCD screen. Has a Verilog file as the top file. Audio configuration is moved to software. Volume controlled by software. Has a hps with an interval timer, fifo, 24 bit i2c data pio, and i2c start and end flag pios. Audio in is directly connected to audio out.
Karaoke_15_1_v1_4: Has a block diagram as the top file. Uses the Audio Clk and Audio IP cores, and clock_500 and i2c Verilog blocks from the i2sound example program with the audio configuration settings changed for this project's specifications. Volume controlled by software. Has a hps with an interval timer, fifo, 7 bit output pio for volume and several 1 bit flag pios. Hardware mixes instrumental track and audio in and plays the result at audio out. Will only play audio out if the software sets the play enable flag pio to 1.
Karaoke_15_1_v1_5: Displays Linux on LCD screen. Has a Verilog file as the top file. Audio configuration is moved to software. Volume controlled by software. Has a hps with an interval timer, fifo, play enable flag pio, 24 bit i2c data pio, and i2c start and end flag pios. Hardware mixes instrumental track and audio in and plays the result at audio out. Will only play audio out if the software sets the play enable flag pio to 1.
Karaoke_15_1_v1_6: Has a block diagram as the top file. Uses the Audio Clk and Audio IP cores, and clock_500 and i2c Verilog blocks from the i2sound example program with the audio configuration settings changed for this project's specifications. Volume controlled by software. Has a hps with an interval timer, three fifos (audio in, audio out, and instrumental track), 7 bit output pio for volume and several 1 bit flag pios. Software reads audio in, performs auto-tuning, and writes the processed audio to the audio out fifo. Hardware writes instrumental track to the left audio out channel and the processed audio in to the right audio out channel. Will only play audio out if the software sets the play enable flag pio to 1.
Karaoke_15_1_v1_7: Displays Linux on LCD screen. Has a Verilog file as the top file. Audio configuration is moved to software. Volume controlled by software. Has a hps with an interval timer, three fifos (audio in, audio out, and instrumental track), play enable flag pio, 24 bit i2c data pio, and i2c start and end flag pios. Software reads audio in, performs auto-tuning, and writes the processed audio to the audio out fifo. Hardware writes instrumental track to the left audio out channel and the processed audio in to the right audio out channel. Will only play audio out if the software sets the play enable flag pio to 1.
