#ifndef _ALTERA_HPS_0_H_
#define _ALTERA_HPS_0_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'soc_system' in
 * file './soc_system.sopcinfo'.
 */

/*
 * This file contains macros for module 'hps_0' and devices
 * connected to the following masters:
 *   h2f_axi_master
 *   h2f_lw_axi_master
 * 
 * Do not include this header file and another header file created for a
 * different module or master group at the same time.
 * Doing so may result in duplicate macro names.
 * Instead, use the system header file which has macros with unique names.
 */

/*
 * Macros for device 'onchip_memory2_0', class 'altera_avalon_onchip_memory2'
 * The macros are prefixed with 'ONCHIP_MEMORY2_0_'.
 * The prefix is the slave descriptor.
 */
#define ONCHIP_MEMORY2_0_COMPONENT_TYPE altera_avalon_onchip_memory2
#define ONCHIP_MEMORY2_0_COMPONENT_NAME onchip_memory2_0
#define ONCHIP_MEMORY2_0_BASE 0x0
#define ONCHIP_MEMORY2_0_SPAN 65536
#define ONCHIP_MEMORY2_0_END 0xffff
#define ONCHIP_MEMORY2_0_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define ONCHIP_MEMORY2_0_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define ONCHIP_MEMORY2_0_CONTENTS_INFO ""
#define ONCHIP_MEMORY2_0_DUAL_PORT 0
#define ONCHIP_MEMORY2_0_GUI_RAM_BLOCK_TYPE AUTO
#define ONCHIP_MEMORY2_0_INIT_CONTENTS_FILE soc_system_onchip_memory2_0
#define ONCHIP_MEMORY2_0_INIT_MEM_CONTENT 1
#define ONCHIP_MEMORY2_0_INSTANCE_ID NONE
#define ONCHIP_MEMORY2_0_NON_DEFAULT_INIT_FILE_ENABLED 0
#define ONCHIP_MEMORY2_0_RAM_BLOCK_TYPE AUTO
#define ONCHIP_MEMORY2_0_READ_DURING_WRITE_MODE DONT_CARE
#define ONCHIP_MEMORY2_0_SINGLE_CLOCK_OP 0
#define ONCHIP_MEMORY2_0_SIZE_MULTIPLE 1
#define ONCHIP_MEMORY2_0_SIZE_VALUE 65536
#define ONCHIP_MEMORY2_0_WRITABLE 1
#define ONCHIP_MEMORY2_0_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_DAT_SYM 1
#define ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_HEX 1
#define ONCHIP_MEMORY2_0_MEMORY_INFO_HAS_BYTE_LANE 0
#define ONCHIP_MEMORY2_0_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_0

/*
 * Macros for device 'hps_fifo_wav_out_0_in', class 'altera_avalon_fifo'
 * The macros are prefixed with 'HPS_FIFO_WAV_OUT_0_IN_'.
 * The prefix is the slave descriptor.
 */
#define HPS_FIFO_WAV_OUT_0_IN_COMPONENT_TYPE altera_avalon_fifo
#define HPS_FIFO_WAV_OUT_0_IN_COMPONENT_NAME hps_fifo_wav_out_0
#define HPS_FIFO_WAV_OUT_0_IN_BASE 0x0
#define HPS_FIFO_WAV_OUT_0_IN_SPAN 8
#define HPS_FIFO_WAV_OUT_0_IN_END 0x7
#define HPS_FIFO_WAV_OUT_0_IN_AVALONMM_AVALONMM_DATA_WIDTH 32
#define HPS_FIFO_WAV_OUT_0_IN_AVALONMM_AVALONST_DATA_WIDTH 32
#define HPS_FIFO_WAV_OUT_0_IN_BITS_PER_SYMBOL 32
#define HPS_FIFO_WAV_OUT_0_IN_CHANNEL_WIDTH 0
#define HPS_FIFO_WAV_OUT_0_IN_ERROR_WIDTH 0
#define HPS_FIFO_WAV_OUT_0_IN_FIFO_DEPTH 2048
#define HPS_FIFO_WAV_OUT_0_IN_SINGLE_CLOCK_MODE 0
#define HPS_FIFO_WAV_OUT_0_IN_SYMBOLS_PER_BEAT 1
#define HPS_FIFO_WAV_OUT_0_IN_USE_AVALONMM_READ_SLAVE 0
#define HPS_FIFO_WAV_OUT_0_IN_USE_AVALONMM_WRITE_SLAVE 1
#define HPS_FIFO_WAV_OUT_0_IN_USE_AVALONST_SINK 0
#define HPS_FIFO_WAV_OUT_0_IN_USE_AVALONST_SOURCE 1
#define HPS_FIFO_WAV_OUT_0_IN_USE_BACKPRESSURE 1
#define HPS_FIFO_WAV_OUT_0_IN_USE_IRQ 0
#define HPS_FIFO_WAV_OUT_0_IN_USE_PACKET 0
#define HPS_FIFO_WAV_OUT_0_IN_USE_READ_CONTROL 0
#define HPS_FIFO_WAV_OUT_0_IN_USE_REGISTER 0
#define HPS_FIFO_WAV_OUT_0_IN_USE_WRITE_CONTROL 1

/*
 * Macros for device 'hps_fifo_wav_out_0_in_csr', class 'altera_avalon_fifo'
 * The macros are prefixed with 'HPS_FIFO_WAV_OUT_0_IN_CSR_'.
 * The prefix is the slave descriptor.
 */
#define HPS_FIFO_WAV_OUT_0_IN_CSR_COMPONENT_TYPE altera_avalon_fifo
#define HPS_FIFO_WAV_OUT_0_IN_CSR_COMPONENT_NAME hps_fifo_wav_out_0
#define HPS_FIFO_WAV_OUT_0_IN_CSR_BASE 0x1000
#define HPS_FIFO_WAV_OUT_0_IN_CSR_SPAN 32
#define HPS_FIFO_WAV_OUT_0_IN_CSR_END 0x101f
#define HPS_FIFO_WAV_OUT_0_IN_CSR_AVALONMM_AVALONMM_DATA_WIDTH 32
#define HPS_FIFO_WAV_OUT_0_IN_CSR_AVALONMM_AVALONST_DATA_WIDTH 32
#define HPS_FIFO_WAV_OUT_0_IN_CSR_BITS_PER_SYMBOL 32
#define HPS_FIFO_WAV_OUT_0_IN_CSR_CHANNEL_WIDTH 0
#define HPS_FIFO_WAV_OUT_0_IN_CSR_ERROR_WIDTH 0
#define HPS_FIFO_WAV_OUT_0_IN_CSR_FIFO_DEPTH 2048
#define HPS_FIFO_WAV_OUT_0_IN_CSR_SINGLE_CLOCK_MODE 0
#define HPS_FIFO_WAV_OUT_0_IN_CSR_SYMBOLS_PER_BEAT 1
#define HPS_FIFO_WAV_OUT_0_IN_CSR_USE_AVALONMM_READ_SLAVE 0
#define HPS_FIFO_WAV_OUT_0_IN_CSR_USE_AVALONMM_WRITE_SLAVE 1
#define HPS_FIFO_WAV_OUT_0_IN_CSR_USE_AVALONST_SINK 0
#define HPS_FIFO_WAV_OUT_0_IN_CSR_USE_AVALONST_SOURCE 1
#define HPS_FIFO_WAV_OUT_0_IN_CSR_USE_BACKPRESSURE 1
#define HPS_FIFO_WAV_OUT_0_IN_CSR_USE_IRQ 0
#define HPS_FIFO_WAV_OUT_0_IN_CSR_USE_PACKET 0
#define HPS_FIFO_WAV_OUT_0_IN_CSR_USE_READ_CONTROL 0
#define HPS_FIFO_WAV_OUT_0_IN_CSR_USE_REGISTER 0
#define HPS_FIFO_WAV_OUT_0_IN_CSR_USE_WRITE_CONTROL 1

/*
 * Macros for device 'hps_fifo_ain_0_out', class 'altera_avalon_fifo'
 * The macros are prefixed with 'HPS_FIFO_AIN_0_OUT_'.
 * The prefix is the slave descriptor.
 */
#define HPS_FIFO_AIN_0_OUT_COMPONENT_TYPE altera_avalon_fifo
#define HPS_FIFO_AIN_0_OUT_COMPONENT_NAME hps_fifo_ain_0
#define HPS_FIFO_AIN_0_OUT_BASE 0x2000
#define HPS_FIFO_AIN_0_OUT_SPAN 8
#define HPS_FIFO_AIN_0_OUT_END 0x2007
#define HPS_FIFO_AIN_0_OUT_AVALONMM_AVALONMM_DATA_WIDTH 32
#define HPS_FIFO_AIN_0_OUT_AVALONMM_AVALONST_DATA_WIDTH 32
#define HPS_FIFO_AIN_0_OUT_BITS_PER_SYMBOL 32
#define HPS_FIFO_AIN_0_OUT_CHANNEL_WIDTH 0
#define HPS_FIFO_AIN_0_OUT_ERROR_WIDTH 0
#define HPS_FIFO_AIN_0_OUT_FIFO_DEPTH 2048
#define HPS_FIFO_AIN_0_OUT_SINGLE_CLOCK_MODE 0
#define HPS_FIFO_AIN_0_OUT_SYMBOLS_PER_BEAT 1
#define HPS_FIFO_AIN_0_OUT_USE_AVALONMM_READ_SLAVE 1
#define HPS_FIFO_AIN_0_OUT_USE_AVALONMM_WRITE_SLAVE 0
#define HPS_FIFO_AIN_0_OUT_USE_AVALONST_SINK 1
#define HPS_FIFO_AIN_0_OUT_USE_AVALONST_SOURCE 0
#define HPS_FIFO_AIN_0_OUT_USE_BACKPRESSURE 1
#define HPS_FIFO_AIN_0_OUT_USE_IRQ 0
#define HPS_FIFO_AIN_0_OUT_USE_PACKET 0
#define HPS_FIFO_AIN_0_OUT_USE_READ_CONTROL 1
#define HPS_FIFO_AIN_0_OUT_USE_REGISTER 0
#define HPS_FIFO_AIN_0_OUT_USE_WRITE_CONTROL 0

/*
 * Macros for device 'hps_fifo_ain_0_out_csr', class 'altera_avalon_fifo'
 * The macros are prefixed with 'HPS_FIFO_AIN_0_OUT_CSR_'.
 * The prefix is the slave descriptor.
 */
#define HPS_FIFO_AIN_0_OUT_CSR_COMPONENT_TYPE altera_avalon_fifo
#define HPS_FIFO_AIN_0_OUT_CSR_COMPONENT_NAME hps_fifo_ain_0
#define HPS_FIFO_AIN_0_OUT_CSR_BASE 0x3000
#define HPS_FIFO_AIN_0_OUT_CSR_SPAN 32
#define HPS_FIFO_AIN_0_OUT_CSR_END 0x301f
#define HPS_FIFO_AIN_0_OUT_CSR_AVALONMM_AVALONMM_DATA_WIDTH 32
#define HPS_FIFO_AIN_0_OUT_CSR_AVALONMM_AVALONST_DATA_WIDTH 32
#define HPS_FIFO_AIN_0_OUT_CSR_BITS_PER_SYMBOL 32
#define HPS_FIFO_AIN_0_OUT_CSR_CHANNEL_WIDTH 0
#define HPS_FIFO_AIN_0_OUT_CSR_ERROR_WIDTH 0
#define HPS_FIFO_AIN_0_OUT_CSR_FIFO_DEPTH 2048
#define HPS_FIFO_AIN_0_OUT_CSR_SINGLE_CLOCK_MODE 0
#define HPS_FIFO_AIN_0_OUT_CSR_SYMBOLS_PER_BEAT 1
#define HPS_FIFO_AIN_0_OUT_CSR_USE_AVALONMM_READ_SLAVE 1
#define HPS_FIFO_AIN_0_OUT_CSR_USE_AVALONMM_WRITE_SLAVE 0
#define HPS_FIFO_AIN_0_OUT_CSR_USE_AVALONST_SINK 1
#define HPS_FIFO_AIN_0_OUT_CSR_USE_AVALONST_SOURCE 0
#define HPS_FIFO_AIN_0_OUT_CSR_USE_BACKPRESSURE 1
#define HPS_FIFO_AIN_0_OUT_CSR_USE_IRQ 0
#define HPS_FIFO_AIN_0_OUT_CSR_USE_PACKET 0
#define HPS_FIFO_AIN_0_OUT_CSR_USE_READ_CONTROL 1
#define HPS_FIFO_AIN_0_OUT_CSR_USE_REGISTER 0
#define HPS_FIFO_AIN_0_OUT_CSR_USE_WRITE_CONTROL 0

/*
 * Macros for device 'hps_fifo_aout_0_in', class 'altera_avalon_fifo'
 * The macros are prefixed with 'HPS_FIFO_AOUT_0_IN_'.
 * The prefix is the slave descriptor.
 */
#define HPS_FIFO_AOUT_0_IN_COMPONENT_TYPE altera_avalon_fifo
#define HPS_FIFO_AOUT_0_IN_COMPONENT_NAME hps_fifo_aout_0
#define HPS_FIFO_AOUT_0_IN_BASE 0x4000
#define HPS_FIFO_AOUT_0_IN_SPAN 8
#define HPS_FIFO_AOUT_0_IN_END 0x4007
#define HPS_FIFO_AOUT_0_IN_AVALONMM_AVALONMM_DATA_WIDTH 32
#define HPS_FIFO_AOUT_0_IN_AVALONMM_AVALONST_DATA_WIDTH 32
#define HPS_FIFO_AOUT_0_IN_BITS_PER_SYMBOL 32
#define HPS_FIFO_AOUT_0_IN_CHANNEL_WIDTH 0
#define HPS_FIFO_AOUT_0_IN_ERROR_WIDTH 0
#define HPS_FIFO_AOUT_0_IN_FIFO_DEPTH 2048
#define HPS_FIFO_AOUT_0_IN_SINGLE_CLOCK_MODE 0
#define HPS_FIFO_AOUT_0_IN_SYMBOLS_PER_BEAT 1
#define HPS_FIFO_AOUT_0_IN_USE_AVALONMM_READ_SLAVE 0
#define HPS_FIFO_AOUT_0_IN_USE_AVALONMM_WRITE_SLAVE 1
#define HPS_FIFO_AOUT_0_IN_USE_AVALONST_SINK 0
#define HPS_FIFO_AOUT_0_IN_USE_AVALONST_SOURCE 1
#define HPS_FIFO_AOUT_0_IN_USE_BACKPRESSURE 1
#define HPS_FIFO_AOUT_0_IN_USE_IRQ 0
#define HPS_FIFO_AOUT_0_IN_USE_PACKET 0
#define HPS_FIFO_AOUT_0_IN_USE_READ_CONTROL 0
#define HPS_FIFO_AOUT_0_IN_USE_REGISTER 0
#define HPS_FIFO_AOUT_0_IN_USE_WRITE_CONTROL 1

/*
 * Macros for device 'hps_fifo_aout_0_in_csr', class 'altera_avalon_fifo'
 * The macros are prefixed with 'HPS_FIFO_AOUT_0_IN_CSR_'.
 * The prefix is the slave descriptor.
 */
#define HPS_FIFO_AOUT_0_IN_CSR_COMPONENT_TYPE altera_avalon_fifo
#define HPS_FIFO_AOUT_0_IN_CSR_COMPONENT_NAME hps_fifo_aout_0
#define HPS_FIFO_AOUT_0_IN_CSR_BASE 0x5000
#define HPS_FIFO_AOUT_0_IN_CSR_SPAN 32
#define HPS_FIFO_AOUT_0_IN_CSR_END 0x501f
#define HPS_FIFO_AOUT_0_IN_CSR_AVALONMM_AVALONMM_DATA_WIDTH 32
#define HPS_FIFO_AOUT_0_IN_CSR_AVALONMM_AVALONST_DATA_WIDTH 32
#define HPS_FIFO_AOUT_0_IN_CSR_BITS_PER_SYMBOL 32
#define HPS_FIFO_AOUT_0_IN_CSR_CHANNEL_WIDTH 0
#define HPS_FIFO_AOUT_0_IN_CSR_ERROR_WIDTH 0
#define HPS_FIFO_AOUT_0_IN_CSR_FIFO_DEPTH 2048
#define HPS_FIFO_AOUT_0_IN_CSR_SINGLE_CLOCK_MODE 0
#define HPS_FIFO_AOUT_0_IN_CSR_SYMBOLS_PER_BEAT 1
#define HPS_FIFO_AOUT_0_IN_CSR_USE_AVALONMM_READ_SLAVE 0
#define HPS_FIFO_AOUT_0_IN_CSR_USE_AVALONMM_WRITE_SLAVE 1
#define HPS_FIFO_AOUT_0_IN_CSR_USE_AVALONST_SINK 0
#define HPS_FIFO_AOUT_0_IN_CSR_USE_AVALONST_SOURCE 1
#define HPS_FIFO_AOUT_0_IN_CSR_USE_BACKPRESSURE 1
#define HPS_FIFO_AOUT_0_IN_CSR_USE_IRQ 0
#define HPS_FIFO_AOUT_0_IN_CSR_USE_PACKET 0
#define HPS_FIFO_AOUT_0_IN_CSR_USE_READ_CONTROL 0
#define HPS_FIFO_AOUT_0_IN_CSR_USE_REGISTER 0
#define HPS_FIFO_AOUT_0_IN_CSR_USE_WRITE_CONTROL 1

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * The macros are prefixed with 'SYSID_QSYS_'.
 * The prefix is the slave descriptor.
 */
#define SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define SYSID_QSYS_BASE 0x10000
#define SYSID_QSYS_SPAN 8
#define SYSID_QSYS_END 0x10007
#define SYSID_QSYS_ID 2899645186
#define SYSID_QSYS_TIMESTAMP 1461766286

/*
 * Macros for device 'led_pio', class 'altera_avalon_pio'
 * The macros are prefixed with 'LED_PIO_'.
 * The prefix is the slave descriptor.
 */
#define LED_PIO_COMPONENT_TYPE altera_avalon_pio
#define LED_PIO_COMPONENT_NAME led_pio
#define LED_PIO_BASE 0x10040
#define LED_PIO_SPAN 64
#define LED_PIO_END 0x1007f
#define LED_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define LED_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define LED_PIO_CAPTURE 0
#define LED_PIO_DATA_WIDTH 10
#define LED_PIO_DO_TEST_BENCH_WIRING 0
#define LED_PIO_DRIVEN_SIM_VALUE 0
#define LED_PIO_EDGE_TYPE NONE
#define LED_PIO_FREQ 50000000
#define LED_PIO_HAS_IN 0
#define LED_PIO_HAS_OUT 1
#define LED_PIO_HAS_TRI 0
#define LED_PIO_IRQ_TYPE NONE
#define LED_PIO_RESET_VALUE 15

/*
 * Macros for device 'vol_set_in_0', class 'altera_avalon_pio'
 * The macros are prefixed with 'VOL_SET_IN_0_'.
 * The prefix is the slave descriptor.
 */
#define VOL_SET_IN_0_COMPONENT_TYPE altera_avalon_pio
#define VOL_SET_IN_0_COMPONENT_NAME vol_set_in_0
#define VOL_SET_IN_0_BASE 0x11000
#define VOL_SET_IN_0_SPAN 64
#define VOL_SET_IN_0_END 0x1103f
#define VOL_SET_IN_0_BIT_CLEARING_EDGE_REGISTER 0
#define VOL_SET_IN_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define VOL_SET_IN_0_CAPTURE 0
#define VOL_SET_IN_0_DATA_WIDTH 1
#define VOL_SET_IN_0_DO_TEST_BENCH_WIRING 0
#define VOL_SET_IN_0_DRIVEN_SIM_VALUE 0
#define VOL_SET_IN_0_EDGE_TYPE NONE
#define VOL_SET_IN_0_FREQ 50000000
#define VOL_SET_IN_0_HAS_IN 1
#define VOL_SET_IN_0_HAS_OUT 0
#define VOL_SET_IN_0_HAS_TRI 0
#define VOL_SET_IN_0_IRQ_TYPE NONE
#define VOL_SET_IN_0_RESET_VALUE 0

/*
 * Macros for device 'vol_flag_out_0', class 'altera_avalon_pio'
 * The macros are prefixed with 'VOL_FLAG_OUT_0_'.
 * The prefix is the slave descriptor.
 */
#define VOL_FLAG_OUT_0_COMPONENT_TYPE altera_avalon_pio
#define VOL_FLAG_OUT_0_COMPONENT_NAME vol_flag_out_0
#define VOL_FLAG_OUT_0_BASE 0x12000
#define VOL_FLAG_OUT_0_SPAN 64
#define VOL_FLAG_OUT_0_END 0x1203f
#define VOL_FLAG_OUT_0_BIT_CLEARING_EDGE_REGISTER 0
#define VOL_FLAG_OUT_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define VOL_FLAG_OUT_0_CAPTURE 0
#define VOL_FLAG_OUT_0_DATA_WIDTH 1
#define VOL_FLAG_OUT_0_DO_TEST_BENCH_WIRING 0
#define VOL_FLAG_OUT_0_DRIVEN_SIM_VALUE 0
#define VOL_FLAG_OUT_0_EDGE_TYPE NONE
#define VOL_FLAG_OUT_0_FREQ 50000000
#define VOL_FLAG_OUT_0_HAS_IN 0
#define VOL_FLAG_OUT_0_HAS_OUT 1
#define VOL_FLAG_OUT_0_HAS_TRI 0
#define VOL_FLAG_OUT_0_IRQ_TYPE NONE
#define VOL_FLAG_OUT_0_RESET_VALUE 0

/*
 * Macros for device 'play_out_0', class 'altera_avalon_pio'
 * The macros are prefixed with 'PLAY_OUT_0_'.
 * The prefix is the slave descriptor.
 */
#define PLAY_OUT_0_COMPONENT_TYPE altera_avalon_pio
#define PLAY_OUT_0_COMPONENT_NAME play_out_0
#define PLAY_OUT_0_BASE 0x13000
#define PLAY_OUT_0_SPAN 64
#define PLAY_OUT_0_END 0x1303f
#define PLAY_OUT_0_BIT_CLEARING_EDGE_REGISTER 0
#define PLAY_OUT_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PLAY_OUT_0_CAPTURE 0
#define PLAY_OUT_0_DATA_WIDTH 1
#define PLAY_OUT_0_DO_TEST_BENCH_WIRING 0
#define PLAY_OUT_0_DRIVEN_SIM_VALUE 0
#define PLAY_OUT_0_EDGE_TYPE NONE
#define PLAY_OUT_0_FREQ 50000000
#define PLAY_OUT_0_HAS_IN 0
#define PLAY_OUT_0_HAS_OUT 1
#define PLAY_OUT_0_HAS_TRI 0
#define PLAY_OUT_0_IRQ_TYPE NONE
#define PLAY_OUT_0_RESET_VALUE 0

/*
 * Macros for device 'vol_flag_RR_in_0', class 'altera_avalon_pio'
 * The macros are prefixed with 'VOL_FLAG_RR_IN_0_'.
 * The prefix is the slave descriptor.
 */
#define VOL_FLAG_RR_IN_0_COMPONENT_TYPE altera_avalon_pio
#define VOL_FLAG_RR_IN_0_COMPONENT_NAME vol_flag_RR_in_0
#define VOL_FLAG_RR_IN_0_BASE 0x14000
#define VOL_FLAG_RR_IN_0_SPAN 64
#define VOL_FLAG_RR_IN_0_END 0x1403f
#define VOL_FLAG_RR_IN_0_BIT_CLEARING_EDGE_REGISTER 0
#define VOL_FLAG_RR_IN_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define VOL_FLAG_RR_IN_0_CAPTURE 0
#define VOL_FLAG_RR_IN_0_DATA_WIDTH 1
#define VOL_FLAG_RR_IN_0_DO_TEST_BENCH_WIRING 0
#define VOL_FLAG_RR_IN_0_DRIVEN_SIM_VALUE 0
#define VOL_FLAG_RR_IN_0_EDGE_TYPE NONE
#define VOL_FLAG_RR_IN_0_FREQ 50000000
#define VOL_FLAG_RR_IN_0_HAS_IN 1
#define VOL_FLAG_RR_IN_0_HAS_OUT 0
#define VOL_FLAG_RR_IN_0_HAS_TRI 0
#define VOL_FLAG_RR_IN_0_IRQ_TYPE NONE
#define VOL_FLAG_RR_IN_0_RESET_VALUE 0

/*
 * Macros for device 'jtag_uart', class 'altera_avalon_jtag_uart'
 * The macros are prefixed with 'JTAG_UART_'.
 * The prefix is the slave descriptor.
 */
#define JTAG_UART_COMPONENT_TYPE altera_avalon_jtag_uart
#define JTAG_UART_COMPONENT_NAME jtag_uart
#define JTAG_UART_BASE 0x20000
#define JTAG_UART_SPAN 32
#define JTAG_UART_END 0x2001f
#define JTAG_UART_IRQ 2
#define JTAG_UART_READ_DEPTH 64
#define JTAG_UART_READ_THRESHOLD 8
#define JTAG_UART_WRITE_DEPTH 64
#define JTAG_UART_WRITE_THRESHOLD 8

/*
 * Macros for device 'timer_0', class 'altera_avalon_timer'
 * The macros are prefixed with 'TIMER_0_'.
 * The prefix is the slave descriptor.
 */
#define TIMER_0_COMPONENT_TYPE altera_avalon_timer
#define TIMER_0_COMPONENT_NAME timer_0
#define TIMER_0_BASE 0x40000
#define TIMER_0_SPAN 128
#define TIMER_0_END 0x4007f
#define TIMER_0_IRQ 0
#define TIMER_0_ALWAYS_RUN 0
#define TIMER_0_COUNTER_SIZE 32
#define TIMER_0_FIXED_PERIOD 0
#define TIMER_0_FREQ 50000000
#define TIMER_0_LOAD_VALUE 49999
#define TIMER_0_MULT 0.001
#define TIMER_0_PERIOD 1
#define TIMER_0_PERIOD_UNITS ms
#define TIMER_0_RESET_OUTPUT 0
#define TIMER_0_SNAPSHOT 1
#define TIMER_0_TICKS_PER_SEC 1000
#define TIMER_0_TIMEOUT_PULSE_OUTPUT 0

/*
 * Macros for device 'vol_ctrl_0', class 'altera_avalon_pio'
 * The macros are prefixed with 'VOL_CTRL_0_'.
 * The prefix is the slave descriptor.
 */
#define VOL_CTRL_0_COMPONENT_TYPE altera_avalon_pio
#define VOL_CTRL_0_COMPONENT_NAME vol_ctrl_0
#define VOL_CTRL_0_BASE 0x50000
#define VOL_CTRL_0_SPAN 64
#define VOL_CTRL_0_END 0x5003f
#define VOL_CTRL_0_BIT_CLEARING_EDGE_REGISTER 0
#define VOL_CTRL_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define VOL_CTRL_0_CAPTURE 0
#define VOL_CTRL_0_DATA_WIDTH 7
#define VOL_CTRL_0_DO_TEST_BENCH_WIRING 0
#define VOL_CTRL_0_DRIVEN_SIM_VALUE 0
#define VOL_CTRL_0_EDGE_TYPE NONE
#define VOL_CTRL_0_FREQ 50000000
#define VOL_CTRL_0_HAS_IN 0
#define VOL_CTRL_0_HAS_OUT 1
#define VOL_CTRL_0_HAS_TRI 0
#define VOL_CTRL_0_IRQ_TYPE NONE
#define VOL_CTRL_0_RESET_VALUE 121


#endif /* _ALTERA_HPS_0_H_ */
